Lista 8 - Laboratório de Programação Procedimental
Ana Laura Neuber de Castro Carvalho - 12221BCC027

Exercício 1

#include <stdio.h>

int main()
{
    float vetor[10];
    float ponteiro;

    ponteiro = &vetor[0];

    for(int i=0; i<10; i++){
        printf("\nEndereço vetor[%d] = %p", i, (ponteiro+i));
    }


    return 0;
}

Exercício 2

#include <stdio.h>

int main()
{
    int k=0;
    float matriz[3][3];
    floatponteiro;

    ponteiro = &matriz[0][0];

    for(int i=0; i<3; i++){
        for(int j=0; j<3; j++){
            printf("\nEndereço vetor[%d][%d] = %p", i, j, (ponteiro+k));
            k++;
        }
    }


    return 0;
}

Exercicio 3

#include <stdio.h>

int main()
{
    int vetor[5];
    int ponteiro;

    ponteiro = &vetor[0];

    for(int i=0; i<5; i++){
        printf("vetor[%d] = ", i);
        scanf("%d", ponteiro+i);
    }
    for(int i=0; i<5; i++){
        printf("\nvetor[%d] = %d", i,(ponteiro+i)2);
    }




    return 0;
}

Exercicio 4

#include <stdio.h>

int main()
{
    int vetor[5];
    intponteiro;

    ponteiro = &vetor[0];

    for(int i=0; i<5; i++){
        printf("vetor[%d] = ", i);
        scanf("%d", ponteiro+i);
    }
    printf("\nEndereço dos numeros pares: ");
    for(int i=0; i<5; i++){
        if((*(ponteiro+i)%2)==0){
            printf("\nvetor[%d] = %p", i, (ponteiro+i));
        }
    }




    return 0;
}

Exercício 5

#include <stdio.h>

int verifica(char *string1, char *string2){
    int i, j;
    for(i = 0, j = 0; (*(string1 + i)) != '\0'; i++){
        while( (*(string1 + i)) == (*(string2 + j)) ){
            i++;
            j++;
            if( (*(string2 + j)) == '\n' || (*(string2 + j)) == '\0'){
                return 1;
            }
            else if( (*(string1 + i)) != (*(string2 + j)) ){
                j=0;
        	}
        }
    }
    return 0;
}

int main(){
    char string1[100], string2[100];
    
    printf("Digite duas strings: ");
    printf("\nString 1: ");
    setbuf(stdin, NULL);
    fgets(string1, 99, stdin);
    printf("\nString 2: ");
	setbuf(stdin, NULL);
    fgets(string2, 99, stdin);

    int retorno = verifica(string1, string2);
    
	if(retorno == 1)
        printf("Sim, %s esta contida em %s\n", string2, string1);
    else
        printf("Nao, %s nao esta contida em %s\n", string2, string1);
    return 0;
}

Exercício 6

#include <stdio.h>

int main(){
    int vetor[20], valor=25, *ponteiro;
    
    ponteiro = vetor;
    
    for(int i=0; i<20; i++){
    	*(ponteiro+i)=valor;
	}
	
	for(int i=0; i<20; i++){
    	printf("\nvetor[%d]: %d", i, *(ponteiro+i));
	}
	
    return 0;
}

Exercício 7

#include <stdio.h>

int main(){
    int vetor[10], *ponteiro, *maior, *menor;
    
    ponteiro = vetor;
    maior=vetor;
    menor=vetor;
    
    for(int i=0; i<10; i++){
    	printf("\nDigite o valor vetor[%d]: ", i);
    	scanf("%d",ponteiro+i);
    	if(*(ponteiro+i)>*maior){
    		maior = ponteiro + i;
		}
		if(*(ponteiro+i)<*menor){
    		menor = ponteiro + i;
		}
	}
	
	printf("\nO menor valor eh: %d", *menor);
	printf("\nO maior valor eh: %d", *maior);
	
    return 0;
}

Exercício 8

#include <stdio.h>

int main(){
    int A, *B, **C, ***D;
    
    B = &A;
    C = &B;
    D = &C;
    
	printf("\nDigite o valor A: ");
	scanf("%d",B);

	
	printf("\nO dobro de %d eh: %d", *B, (*B)*2);
	printf("\nO triplo de %d eh: %d", **C, (**C)*3);
	printf("\nO quadruplo de %d eh: %d", ***D, (***D)*4);
	
    return 0;
}
