Lista 8 - Laboratório de Programação Procedimental
Ana Laura Neuber de Castro Carvalho - 12221BCC027

Exercício 1

#include <stdio.h>

void troca_conteudo(int* p1, int* p2){
	int aux;
	aux = *p1;
	*p1 = *p2;
	*p2 = aux;
}

int main(){
	int valor1, valor2, *p1, *p2;
	p1 = &valor1;
	p2 = &valor2;
	
	printf("Insira: \n");
	printf("Valor 1: ");
	scanf("%d", p1);
	printf("Valor 2: ");
	scanf("%d", p2);
		
	printf("\nValores originais: \n");
	printf("Valor 1: %d\n", valor1);
	printf("Valor 2: %d\n\n", valor2);
	
	troca_conteudo(p1, p2);
	
	printf("Valores trocados: \n");
	printf("Valor 1: %d\n", valor1);
	printf("Valor 2: %d\n\n", valor2);
	
	return 0;
}

Exercício 2

#include <stdio.h>

void troca_conteudo(int* p1, int* p2){
	int aux;
	
	if(*p1>*p2);
	else{
		aux = *p1;
		*p1 = *p2;
		*p2 = aux;	
	}
}

int main(){
	int valor1, valor2, *p1, *p2;
	p1 = &valor1;
	p2 = &valor2;
	
	printf("Insira: \n");
	printf("Valor 1: ");
	scanf("%d", p1);
	printf("Valor 2: ");
	scanf("%d", p2);
		
	printf("\nValores originais: \n");
	printf("Valor 1: %d\n", valor1);
	printf("Valor 2: %d\n\n", valor2);
	
	troca_conteudo(p1, p2);
	
	printf("Maior valor: %d\n", valor1);
	printf("Menor valor: %d\n\n", valor2);

	return 0;
}

Exercicio 3

#include <stdio.h>

void soma(int* p1, int* p2){
	*p1 = *p1 + *p2;
}

int main(){
	int valor1, valor2, *p1, *p2;
	p1 = &valor1;
	p2 = &valor2;
	
	printf("Insira: \n");
	printf("A: ");
	scanf("%d", p1);
	printf("B: ");
	scanf("%d", p2);
		
	printf("\nValores originais: \n");
	printf("A: %d\n", valor1);
	printf("B: %d\n\n", valor2);
	
	soma(p1, p2);
	
	printf("A(soma): %d\n", valor1);
	printf("B: %d\n\n", valor2);

	return 0;
}

Exercicio 4

#include <stdio.h>

int ordena(int* p1, int* p2, int* p3){
	int aux =0;
	if(*p1==*p2 && *p2==*p3){
		return 1;
	}
	else{
		if(*p1>*p2){
			aux = *p1;
			*p1 = *p2;
			*p2 = aux;	
		}
		if(*p1>*p3){
			aux = *p1;
			*p1 = *p3;
			*p3 = aux;	
		}
		if(*p2>*p3){
			aux = *p2;
			*p2 = *p3;
			*p3 = aux;	
		}
		return 0;
	}
}

int main(){
	int valor1, valor2, valor3, *p1, *p2, *p3;
	p1 = &valor1;
	p2 = &valor2;
	p3 = &valor3;
	
	printf("Insira: \n");
	printf("A: ");
	scanf("%d", p1);
	printf("B: ");
	scanf("%d", p2);
	printf("C: ");
	scanf("%d", p3);
		
	printf("\nValores originais: \n");
	printf("A: %d\n", valor1);
	printf("B: %d\n", valor2);
	printf("C: %d\n\n", valor3);
	
	ordena(p1, p2, p3);
	
	printf("A: %d\n", valor1);
	printf("B: %d\n", valor2);
	printf("B: %d\n", valor3);

	return 0;
}

Exercício 5

#include <stdio.h>

void separa(float num, int *inteiro, float *frac){
	*inteiro = num;
	*frac = num - *inteiro;
}

int main(){
	float numero, fracionaria, *p_fracionario;
	int inteiro, *p_inteiro;
	
	p_fracionario = &fracionaria;
	p_inteiro = &inteiro;
	
	printf("Insira: \n");
	printf("Numero real: ");
	scanf("%f", &numero);
	
	separa(numero, p_inteiro, p_fracionario);
	
	printf("Numero original: %f\n", numero);
	printf("Parte inteira: %d\n", inteiro);
	printf("Parte fracionária: %f\n", fracionaria);

	return 0;
}

Exercício 6

#include <stdio.h>
#include <math.h>
#define pi 3.14159

void area_volume(float R, float *p_a, float *p_v){
	*p_a = 4 * pi * pow(R,2);
	*p_v = (4/3.0) * pi * pow(R,3);
}

int main(){
	float R, area, volume, *p_a, *p_v;
	
	p_a = &area;
	p_v = &volume;
	
	printf("Insira: \n");
	printf("Raio da Esfera: ");
	scanf("%f", &R);
	
	area_volume(R, p_a, p_v);
	
	printf("R: %f\n", R);
	printf("Area: %f\n", area);
	printf("Volume: %f\n", volume);

	return 0;
}

Exercício 7

#include <stdio.h>
#include <stdlib.h>


void funcao (int *p, int n, int *contador, int *maior) {
  int i, j;
  *contador = 0;
  *maior = p[0];
  for (i = 0; i < n; i++) {
        if (p[i] > *maior) {
      *maior = p[i];
      }
  }
  for (i = 0; i < n; i++) {
    if (*maior == p[i]) {
      (*contador)++;
    }
  }
}

int main () {
	int n=10, *p, i=0, maior, contador, parador=0, aux;
  
	p = (int *) malloc(n*(sizeof(int)));
	
	printf("Digite valores inteiros positivos (digite negativos para parar)\n");
	do{
		if(i==n){
			n+=10;
			p = (int *) realloc(p, n*sizeof(int));
		}
    	printf("Valor %d: ", i+1);
    	scanf("%d", &aux);
    	if(aux<0){
    		parador=1;
		}
		else{
			p[i]= aux;
		}
    	i++;
    	
	}while(parador==0);
	
  	funcao(p, i, &contador, &maior);
  	printf("Maior: %d\n", maior);
  	printf("Aparece %d vezes\n", contador);
  	return 0;
}

Exercício 8

#include <stdio.h>
#include <stdlib.h>

int negativos(float *vet, int N, int *contador) {
  *contador = 0;
  int i;
  for (i = 0; i < N; i++) {
    if (vet[i] < 0) {
      (*contador)++;
    }
  }
  return *contador;
}

int main () {
  int N, i, contador;
  float *vet;
  printf("Indique um valor n para o tamanho de um array: ");
  scanf("%d", &N);
  vet = (float *) malloc(N*(sizeof(int))); 
  for (i = 0; i < N; i++) {
    printf("Posicao %d: ", i + 1);
    scanf("%f", &vet[i]);
  }
  negativos(vet, N, &contador);
  printf("Ha %d numeros negativos nesse array\n", contador);
  return 0;
}

Exercício 9

#include <stdio.h>
#include <stdlib.h>

int main () {
  int i, n, *Array, *p;
  printf("Indique um valor para o tamanho do array: ");
  scanf("%d", &n);
  Array = (int *) malloc(n*(sizeof(int)));
  p = Array;
  for (i = 0; i < n; i++) {
    printf("Valor %d: ", i + 1);
    scanf("%d", &Array[i]);
  }
  for (i = 0; i < n; i++) {
    (*(p+i))++;
    printf("%d\n", *(p+i));
  }
  return 0;
}

Exercício 10


